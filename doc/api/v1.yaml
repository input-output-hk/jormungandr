openapi: 3.0.2

info:
  title: Generic blockchain node REST API
  description: JÃ¶rmungandr Rest API v1
  version: 0.0.1
  contact:
    url: 'https://github.com/input-output-hk/jormungandr/'

servers:
  - url: 'https://localhost'

tags:
  - name: fragment
  - name: vote

paths:
  /api/v1/fragments:
    post:
      description: Post a batch of signed transactions
      operationId: PostFragments
      tags:
        - fragment
      requestBody:
        description: An array of hex-encoded signed transactions
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fail_fast:
                  description: Stop processing the list of fragments upon meeting the first invalid fragment.
                  type: boolean
                fragments:
                  description: The fragments to submit.
                  type: array
                  items:
                    type: string
                    pattern: '[0-9a-f]+'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FragmentsProcessingSummary'
        '400':
          description: An error occurred when processing this request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FragmentsProcessingSummary'
  /api/v1/fragments/statuses:
    get:
      description: Get statuses of fragments
      operationId: FragmentStatuses
      tags:
        - fragment
      parameters:
        - in: query
          name: fragment_ids
          description: Comma-separated list of fragment IDs
          schema:
            type: string
            pattern: '[0-9a-f]+(,[0-9a-f]+)+'
          required: true
          example: '68dcc12fe0dfe5e7b66ca6f8c959f9aa43b273e120a77fc3e4e2f04f1ecd7968,b34bf76412138543d7b57ea23ff58b6b6c04a954c0badc3cadeafc564f1a771'
      responses:
        '200':
          description: Success. If a fragment is missing from in-memory fragment logs it will not show up in the result dictionary.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  oneOf:
                    - description: Fragment is yet to be processed
                      type: string
                      enum:
                        - Pending
                    - description: "Fragment was rejected and won't be added to a block"
                      type: object
                      required:
                        - Rejected
                      properties:
                        Rejected:
                          type: object
                          required:
                            - reason
                          properties:
                            reason:
                              description: Reason for rejection
                              type: string
                    - description: Fragment was added to a block
                      type: object
                      required:
                        - InABlock
                      properties:
                        InABlock:
                          type: object
                          required:
                            - date
                            - block
                          properties:
                            date:
                              description: Epoch and slot ID of block containing fragment separated with a dot
                              type: string
                              pattern: "[0-9]+\\.[0-9]+"
                            block:
                              description: Block hash where the fragment was last seen
                              type: string
                              pattern: '[0-9a-fa-f]+'
              example:
                {
                  '68dcc12fe0dfe5e7b66ca6f8c959f9aa43b273e120a77fc3e4e2f04f1ecd7968': 'Pending',
                }
  /api/v1/fragments/logs:
    get:
      description: Gets logs from node message pool
      operationId: FragmentLogs
      tags:
        - fragment
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - fragment_id
                    - received_from
                    - received_at
                    - last_updated_at
                    - status
                  properties:
                    fragment_id:
                      description: Hex-encoded fragment ID
                      type: string
                      pattern: '[0-9a-f]+'
                    received_from:
                      description: Source of the fragment
                      type: string
                      enum:
                        - Network
                        - Rest
                    received_at:
                      description: When fragment was received by node
                      type: string
                      format: date-time
                    last_updated_at:
                      description: When fragment changed status last time
                      type: string
                      format: date-time
                    status:
                      description: Status of the fragment
                      oneOf:
                        - description: Fragment is yet to be processed
                          type: string
                          enum:
                            - Pending
                        - description: "Fragment was rejected and won't be added to a block"
                          type: object
                          required:
                            - Rejected
                          properties:
                            Rejected:
                              type: object
                              required:
                                - reason
                              properties:
                                reason:
                                  description: Reason for rejection
                                  type: string
                        - description: Fragment was added to a block
                          type: object
                          required:
                            - InABlock
                          properties:
                            InABlock:
                              type: object
                              required:
                                - date
                                - block
                              properties:
                                date:
                                  description: Epoch and slot ID of block containing fragment separated with a dot
                                  type: string
                                  pattern: "[0-9]+\\.[0-9]+"
                                block:
                                  description: Block hash where the fragment was last seen
                                  type: string
                                  pattern: '[0-9a-fA-F]+'
              examples:
                Pending:
                  value:
                    [
                      {
                        'fragment_id': 'a50a80e0ce6cb8e19d4381dc2a521c1d3ab8a532029131e440548625b2a4d3e8',
                        'received_from': 'Rest',
                        'received_at': '2019-08-12T11:20:52.316544007+00:00',
                        'last_updated_at': '2019-08-12T11:20:52.316544079+00:00',
                        'status': 'Pending',
                      },
                    ]
                Rejected:
                  value:
                    [
                      {
                        'fragment_id': '68b36b0e244ff571d4d01026c149a3986bbd7d7deaabac5e3b994171d9c50856',
                        'received_from': 'Rest',
                        'received_at': '2019-08-12T11:20:57.758070884+00:00',
                        'last_updated_at': '2019-08-12T11:20:58.005548031+00:00',
                        'status':
                          {
                            'Rejected':
                              {
                                'reason': 'The UTxO value (99) in the transaction does not match the actually state value: 100',
                              },
                          },
                      },
                    ]
                InABlock:
                  value:
                    [
                      {
                        'fragment_id': '99e8fbb961e9956cab03779e427b9aad249ddcb4ad7c508f3a80f44091485f01',
                        'received_from': 'Rest',
                        'received_at': '2019-08-12T11:21:11.314829989+00:00',
                        'last_updated_at': '2019-08-12T11:21:12.017821060+00:00',
                        'status':
                          {
                            'InABlock':
                              {
                                'date': '114237.32',
                                'block': 'd9040ca57e513a36ecd3bb54207dfcd10682200929cad6ada46b521417964174',
                              },
                          },
                      },
                    ]

  /api/v1/votes/plan/{votePlanId}/account-votes/{account_id}:
    get:
      description: Get numbers of proposals within a vote plan a given user have voted for.
      operationId: AccountVotesWithPlan
      tags:
        - vote
      parameters:
        - in: path
          name: votePlanId
          required: true
          description: The ID of the vote plan to query.
          schema:
            type: string
            pattern: '[0-9a-f]+'
        - in: path
          name: account_id
          required: true
          description: Hex-encoded account ID to get the information from.
          schema:
            type: string
            pattern: '[0-9a-f]+'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
        '404':
          description: The requested vote plan does not exist or is not active.

  /api/v1/votes/plan/account-votes/{account_id}:
    get:
      description: Get indexes of proposals a given user has voted for across all active vote plans.
      operationId: AccountVotes
      tags:
        - vote
      parameters:
        - in: path
          name: account_id
          required: true
          description: Hex-encoded account ID to get the information from.
          schema:
            type: string
            pattern: '[0-9a-f]+'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    vote_plan_id:
                      description: The ID of the vote plan.
                      type: string
                      pattern: '[0-9a-f]+'
                    votes:
                      description: Numbers of proposals within a vote plan.
                      type: array
                      items:
                        type: integer

  /api/v1/votes/plan/accounts-votes-all:
    get:
      description: Get submitted and accepted ballots per every account
      tags:
        - vote
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: hex encoded account identifier
                  text:
                    type: array
                    items:
                      type: string
                      description: Hex-encoded proposal id
                      pattern: '[0-9a-f]{64}'
                    description: ids of the proposals a user has voted for

components:
  schemas:
    FragmentsProcessingSummary:
      description: The information about whether a message was accepted or rejected
      type: object
      properties:
        accepted:
          description: IDs of accepted fragments
          type: array
          items:
            type: string
            format: '[0-9a-f]+'
        rejected:
          description: Detailed information about rejected fragments
          type: array
          items:
            type: object
            required:
              - id
              - reason
            properties:
              id:
                description: The ID of a rejected fragment
                type: string
                format: '[0-9a-f]+'
              pool_number:
                description: The number of the pool that caused this error
                type: integer
              reason:
                description: |
                  * `FragmentAlreadyInLog` -- this fragment was already processed by this node.
                  * `FragmentInvalid` -- this fragment failed validation.
                  * `PreviousFragmentInvalid` -- one of the previous fragments was rejected and `fail_fast` is enabled.
                  * `PoolOverflow` -- One of the pools rejected this fragment due to reaching the capacity limit.
                type: string
                enum:
                  - FragmentAlreadyInLog
                  - FragmentInvalid
                  - PreviousFragmentInvalid
                  - PoolOverflow
