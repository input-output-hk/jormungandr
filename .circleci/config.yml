version: 2
jobs:
  cargo_fetch:
    docker:
      - image: rust:latest
    working_directory: /mnt/crate
    steps:
      - checkout
      - restore_cache:
          keys:
            - cargo-v3-{{ checksum "Cargo.toml" }}-{{ checksum "Cargo.lock" }}
            - cargo-v3-{{ checksum "Cargo.toml" }}
            - cargo-v3-
      - run: git submodule sync
      - run: git submodule update --init
      - run: cargo fetch
      - save_cache:
          key: cargo-v3-{{ checksum "Cargo.toml" }}-{{ checksum "Cargo.lock" }}
          paths:
            - /usr/local/cargo/registry
            - /usr/local/cargo/git
  rustfmt:
    docker:
      - image: rust:latest
    working_directory: /mnt/crate
    steps:
      - checkout
      - run:
          name: Install rustfmt
          command: rustup component add rustfmt
      - run:
          name: Print version information
          command: cargo fmt -- --version
      - run:
          name: Check rustfmt
          command: cargo fmt -- --check
  build_debug:
    docker:
      - image: rust:latest
    working_directory: /mnt/crate
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - restore_cache:
          keys:
            - cargo-v3-{{ checksum "Cargo.toml" }}-{{ checksum "Cargo.lock" }}
            - cargo-v3-{{ checksum "Cargo.toml" }}
            - cargo-v3-
      - run:
          name: Print version information
          command: rustc --version; cargo --version
      - run:
          name: Build
          command: cargo build --frozen
      - persist_to_workspace:
          root: target
          paths:
            - debug/*
  test_debug:
    docker:
      - image: rust:latest
    working_directory: /mnt/crate
    steps:
      - checkout
      - attach_workspace:
          at: target
      - run: git submodule sync
      - run: git submodule update --init
      - restore_cache:
          keys:
            - cargo-v3-{{ checksum "Cargo.toml" }}-{{ checksum "Cargo.lock" }}
            - cargo-v3-{{ checksum "Cargo.toml" }}
            - cargo-v3-
      - run:
          name: Print version information
          command: rustc --version; cargo --version
      - run:
          name: Test
          command: cargo test --frozen --verbose

  test_integration_debug:
    docker:
      - image: rust:latest
    working_directory: /mnt/crate
    steps:
      - checkout
      - attach_workspace:
          at: target
      - run: git submodule sync
      - run: git submodule update --init
      - restore_cache:
          keys:
            - cargo-v3-{{ checksum "Cargo.toml" }}-{{ checksum "Cargo.lock" }}
            - cargo-v3-{{ checksum "Cargo.toml" }}
            - cargo-v3-
      - run:
          name: Install and start syslog
          command: apt update && apt install -y rsyslog && /etc/init.d/rsyslog start
      - run:
          name: Print version information
          command: rustc --version; cargo --version
      - run:
          name: Run integration tests
          command: cargo test --features integration-test --frozen --verbose

  build_release:
    docker:
      - image: rust:latest
    working_directory: /mnt/crate
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - restore_cache:
          keys:
            - cargo-v3-{{ checksum "Cargo.toml" }}-{{ checksum "Cargo.lock" }}
            - cargo-v3-{{ checksum "Cargo.toml" }}
            - cargo-v3-
      - run:
          name: Print version information
          command: rustc --version; cargo --version
      - run:
          name: Build in release profile
          command: cargo build --release --frozen
      - persist_to_workspace:
          root: target
          paths:
            - release/*

  build_release_all_features:
    docker:
      - image: rust:latest
    working_directory: /mnt/crate
    steps:
      - run:
          name: Install systemd dev tools
          command: apt update && apt install -y libsystemd-dev
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - restore_cache:
          keys:
            - cargo-v3-{{ checksum "Cargo.toml" }}-{{ checksum "Cargo.lock" }}
            - cargo-v3-{{ checksum "Cargo.toml" }}
            - cargo-v3-
      - run:
          name: Print version information
          command: rustc --version; cargo --version
      - run:
          name: Build in release profile
          command: cargo build --release --features systemd --frozen
      - persist_to_workspace:
          root: target
          paths:
            - release/*

  test_release:
    docker:
      - image: rust:latest
    working_directory: /mnt/crate
    steps:
      - checkout
      - attach_workspace:
          at: target
      - run: git submodule sync
      - run: git submodule update --init
      - restore_cache:
          keys:
            - cargo-v3-{{ checksum "Cargo.toml" }}-{{ checksum "Cargo.lock" }}
            - cargo-v3-{{ checksum "Cargo.toml" }}
            - cargo-v3-
      - run:
          name: Print version information
          command: rustc --version; cargo --version
      - run:
          name: Test
          command: cargo test --release --frozen --verbose

  test_integration_release_all_features:
    docker:
      - image: rust:latest
    working_directory: /mnt/crate
    steps:
      - run:
          name: Install and start syslog
          command: apt update && apt install -y rsyslog && /etc/init.d/rsyslog start
      - run:
          name: Install systemd dev tools
          command: apt install -y libsystemd-dev
      - checkout
      - attach_workspace:
          at: target
      - run: git submodule sync
      - run: git submodule update --init
      - restore_cache:
          keys:
            - cargo-v3-{{ checksum "Cargo.toml" }}-{{ checksum "Cargo.lock" }}
            - cargo-v3-{{ checksum "Cargo.toml" }}
            - cargo-v3-
      - run:
          name: Print version information
          command: rustc --version; cargo --version
      - run:
          name: Test
          command: cargo test --release --features "integration-test systemd" --frozen --verbose

  test_integration_release:
    docker:
      - image: rust:latest
    working_directory: /mnt/crate
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - restore_cache:
          keys:
            - cargo-v3-{{ checksum "Cargo.toml" }}-{{ checksum "Cargo.lock" }}
            - cargo-v3-{{ checksum "Cargo.toml" }}
            - cargo-v3-
      - run:
          name: Install and start syslog
          command: apt update && apt install -y rsyslog && /etc/init.d/rsyslog start
      - run:
          name: Print version information
          command: rustc --version; cargo --version
      - run:
          name: Run integration tests
          command: cargo test --features integration-test --frozen --verbose

  test_nightly:
    docker:
      - image: rustlang/rust:nightly
    working_directory: /mnt/crate
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - restore_cache:
          keys:
            - cargo-v3-{{ checksum "Cargo.toml" }}-{{ checksum "Cargo.lock" }}
            - cargo-v3-{{ checksum "Cargo.toml" }}
            - cargo-v3-
      - run:
          name: Print version information
          command: rustc --version; cargo --version
      - run:
          name: Build and test with nightly Rust
          command: cargo test --frozen --verbose

  test_integration_nightly:
    docker:
      - image: rustlang/rust:nightly
    working_directory: /mnt/crate
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - restore_cache:
          keys:
            - cargo-v3-{{ checksum "Cargo.toml" }}-{{ checksum "Cargo.lock" }}
            - cargo-v3-{{ checksum "Cargo.toml" }}
            - cargo-v3-
      - run:
          name: Install and start syslog
          command: apt update && apt install -y rsyslog && /etc/init.d/rsyslog start
      - run:
          name: Print version information
          command: rustc --version; cargo --version
      - run:
          name: Run integration tests
          command: cargo test --features integration-test --frozen --verbose

workflows:
  version: 2
  test_all:
    jobs:
      - cargo_fetch
      - rustfmt
      - build_debug:
          requires:
            - rustfmt
            - cargo_fetch
      - build_release:
          requires:
            - rustfmt
            - cargo_fetch
      - build_release_all_features:
          requires:
            - rustfmt
            - cargo_fetch
      - test_debug:
          requires:
            - build_debug
      - test_release:
          requires:
            - build_release
      - test_integration_debug:
          requires:
            - build_debug
      - test_integration_release:
          requires:
            - build_release
      - test_integration_release_all_features:
          requires:
            - build_release_all_features
      - test_nightly:
          requires:
            - rustfmt
            - cargo_fetch
      - test_integration_nightly:
          requires:
            - rustfmt
            - cargo_fetch
