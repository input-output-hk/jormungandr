version: 2.1

executors:
  rust-stable:
    docker:
      - image: inputoutput/rust:stable
    working_directory: /home/circleci/build

jobs:
  cargo_fetch:
    executor: rust-stable
    steps:
      - checkout
      - run: git --version
      - run: git submodule sync
      - run: git submodule update --init --depth=1
      - run:
          name: Get top commit hash of cargo registry index
          command: |
            git ls-remote --heads https://github.com/rust-lang/crates.io-index.git master |
              cut -f 1 | tee .circleci/crates.io-index.head
      - restore_cache:
          name: Restore cargo registry index from cache
          keys:
            - cargo-index-v1-{{ checksum ".circleci/crates.io-index.head" }}
            - cargo-index-v1-
      - restore_cache:
          name: Restore dependency crates from cache
          keys:
            - cargo-deps-v2-{{ checksum "Cargo.lock" }}
      - run:
          name: Fetch dependencies and update cargo registry index
          command: |
            cargo fetch
            git -C /usr/local/cargo/registry/index/github.com-1ecc6299db9ec823 \
                show-ref -s refs/remotes/origin/master |
              tee .circleci/crates.io-index.head
      - save_cache:
          name: Save cargo registry index into cache
          key: cargo-index-v1-{{ checksum ".circleci/crates.io-index.head" }}
          paths:
            - /usr/local/cargo/registry/index
      - save_cache:
          name: Save dependency crates into cache
          key: cargo-deps-v2-{{ checksum "Cargo.lock" }}
          paths:
            - /usr/local/cargo/registry/cache
            - /usr/local/cargo/git/db
      - persist_to_workspace:
          root: .
          paths:
            - .circleci/crates.io-index.head

  test_debug:
    executor: rust-stable
    environment:
      RUSTFLAGS: -D warnings
      CARGO_INCREMENTAL: 0
    steps:
      - test

commands:
  test:
    description: "Steps for the test jobs"
    parameters:
      mode:
        type: string
        default: ''
      cargo_behavior:
        type: string
        default: --verbose
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init --depth=1
      - attach_workspace:
          at: .
      - restore_cache:
          name: Restore cargo registry index from cache
          keys:
            - cargo-index-v1-{{ checksum ".circleci/crates.io-index.head" }}
      - restore_cache:
          name: Restore dependency crates from cache
          keys:
            - cargo-deps-v2-{{ checksum "Cargo.lock" }}
      - run:
          name: Print version information
          command: rustc --version; cargo --version
      # `cargo build --all-targets` runs out of memory
      - run:
          name: Build jormungandr
          command: |
            cargo build -p jormungandr --bin jormungandr << parameters.mode >> << parameters.cargo_behavior >>
      - run:
          name: Build jcli
          command: |
            cargo build -p jcli --bin jcli << parameters.mode >> << parameters.cargo_behavior >>
      - run:
          name: Build tests
          command: |
            cargo build --workspace --tests << parameters.mode >> << parameters.cargo_behavior >>
      - run:
          name: Build scenario tests
          command: |
            cargo build -p jormungandr-scenario-tests --bin jormungandr-scenario-tests << parameters.mode >> << parameters.cargo_behavior >>
      - run:
          name: Run tests
          environment:
            RUST_BACKTRACE: 1
          command: |
            cargo test --workspace --tests << parameters.mode >> << parameters.cargo_behavior >>
      - run:
          name: Run doc tests
          environment:
            RUST_BACKTRACE: 1
            CARGO_BUILD_JOBS: 1
          command: |
            cargo test --workspace --doc \
              << parameters.mode >> << parameters.cargo_behavior >> \
              -- --test-threads=1
      - run:
          name: Compress Artifacts
          command: tar -cvzf logs.tar /tmp/logs/

      - store_artifacts: 
          path: /tmp/logs.tar
          destination: failed_logs

workflows:
  version: 2
  test_all:
    jobs:
      - cargo_fetch
      - test_debug:
          requires:
            - cargo_fetch
