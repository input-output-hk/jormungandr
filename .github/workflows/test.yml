name: CI

on:
  push:
    branches:
      - master
  pull_request:

defaults:
  run:
    working-directory: /dev/shm

jobs:
  cache_info:
    name: Bootstrap cache
    runs-on: ubuntu-latest
    outputs:
      crates-io-index-head: ${{ steps.ls-crates-io-index.outputs.head }}
      cargo-lock-hash: ${{ steps.hash-cargo-lock.outputs.hash }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - id: ls-crates-io-index
        name: Get head commit hash of crates.io registry index
        run: |
          commit=$(
            git ls-remote --heads https://github.com/rust-lang/crates.io-index.git master |
            cut -f 1
          )
          echo "$commit"
          echo "::set-output name=head::$commit"

      - id: hash-cargo-lock
        name: Calculate dependency cache key
        run: |
          hash=$(
            ci/strip-own-version-from-cargo-lock.pl Cargo.lock |
            sha1sum | cut -d ' ' -f 1
          )
          echo "$hash"
          echo "::set-output name=hash::$hash"

  update_deps:
    name: Update dependencies
    needs: cache_info
    # Caches on Windows and Unix do not interop:
    # https://github.com/actions/cache/issues/330#issuecomment-637701649
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Cache cargo registry index
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry/index
          key: cargo-index-${{ needs.cache_info.outputs.crates-io-index-head }}
          restore-keys: cargo-index-

      - id: cargo-deps
        name: Cache cargo dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry/cache
            ~/.cargo/git/db
          key: cargo-deps-v1-${{ needs.cache_info.outputs.cargo-lock-hash }}

      - name: Check out the repository
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Fetch dependencies and update cargo registry
        run: cargo fetch --locked

  tests:
    name: Tests
    needs: [cache_info, update_deps]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        flags: ['', '--release']
        toolchain: [stable]
        include:
          - os: ubuntu-latest
            flags: ''
            toolchain: nightly
    env:
      RUSTFLAGS: -D warnings
      RUST_BACKTRACE: 1
      CARGO_FLAGS: --verbose --locked
    steps:
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true
          default: true
          components: rustfmt

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Restore cargo registry index
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry/index
          key: cargo-index-${{ needs.cache_info.outputs.crates-io-index-head }}

      - name: Restore cargo dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry/cache
            ~/.cargo/git/db
          key: cargo-deps-v1-${{ needs.cache_info.outputs.cargo-lock-hash }}

      - name: Build jormungandr
        uses: actions-rs/cargo@v1
        timeout-minutes: 30
        with:
          command: build
          args: -p jormungandr ${{ env.CARGO_FLAGS }} ${{ matrix.flags }}

      - name: Build jcli
        uses: actions-rs/cargo@v1
        timeout-minutes: 30
        with:
          command: build
          args: -p jcli ${{ env.CARGO_FLAGS }} ${{ matrix.flags }}

      - name: Build tests
        uses: actions-rs/cargo@v1
        timeout-minutes: 30
        with:
          command: build
          args: --tests ${{ env.CARGO_FLAGS }} ${{ matrix.flags }}

      - name: Build scenario tests
        uses: actions-rs/cargo@v1
        timeout-minutes: 30
        with:
          command: build
          args: -p jormungandr-scenario-tests ${{ env.CARGO_FLAGS }} ${{ matrix.flags }}

      - name: Run tests
        uses: actions-rs/cargo@v1
        timeout-minutes: 30
        with:
          command: test
          args: --tests ${{ env.CARGO_FLAGS }} ${{ matrix.flags }}

  lints:
    name: Lints
    needs: [cache_info, update_deps]
    runs-on: ubuntu-latest
    steps:
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          default: true
          components: rustfmt, clippy

      - name: Checkout code
        uses: actions/checkout@v2

      - name: rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

      - name: Restore cargo registry index
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry/index
          key: cargo-index-${{ needs.cache_info.outputs.crates-io-index-head }}

      - name: Restore cargo dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry/cache
            ~/.cargo/git/db
          key: cargo-deps-v1-${{ needs.cache_info.outputs.cargo-lock-hash }}

      - name: clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
